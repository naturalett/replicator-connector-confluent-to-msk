apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "cp-enterprise-replicator-executable.fullname" . }}
  labels:
    {{- include "cp-enterprise-replicator-executable.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cp-enterprise-replicator-executable.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cp-enterprise-replicator-executable.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cp-enterprise-replicator-executable.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: replicator-properties
              mountPath: /etc/replicator-config/
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessInitialDelaySeconds | default "60" }}
            periodSeconds: {{ .Values.livenessPeriodSeconds | default "60" }}
            timeoutSeconds: {{ .Values.livenessTimeoutSeconds | default "300" }}
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessInitialDelaySeconds | default "60" }}
            periodSeconds: {{ .Values.readinessPeriodSeconds | default "60" }}
            timeoutSeconds: {{ .Values.readinessTimeoutSeconds | default "300" }}
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CLUSTER_ID
              value: "replicator-k8s"
            {{- range $key, $val := (index (index .Values "envVars" "all" )) | default dict }}
            - name: {{ $key }}
              value: {{ $val | quote}}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: replicator-properties
          configMap:
            name: {{ .Release.Name }}-configmap
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
